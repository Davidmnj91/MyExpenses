// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "create account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "description": "Create Account data",
                        "name": "CreateAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateAccountDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AccountAnemic"
                        }
                    }
                }
            }
        },
        "/accounts/close/{id}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "close account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AccountAnemic"
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "update account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateName Password",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UpdateAccountPasswordDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AccountAnemic"
                        }
                    }
                }
            }
        },
        "/groups": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "create group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "description": "Create Group data",
                        "name": "CreateGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                }
            }
        },
        "/groups/close/{id}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "close group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                }
            }
        },
        "/groups/{id}": {
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "update group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New group name",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UpdateGroupDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateAccountDTO": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "MyExpensesAccount"
                },
                "password": {
                    "type": "string",
                    "example": "mypassword1234"
                }
            }
        },
        "controller.CreateGroupDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "MyExpensesGroup"
                }
            }
        },
        "controller.UpdateAccountPasswordDTO": {
            "type": "object",
            "required": [
                "new",
                "password"
            ],
            "properties": {
                "new": {
                    "type": "string",
                    "example": "newPassword"
                },
                "password": {
                    "type": "string",
                    "example": "oldPassword"
                }
            }
        },
        "controller.UpdateGroupDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "MyChangedExpensesGroup"
                }
            }
        },
        "domain.AccountAnemic": {
            "type": "object",
            "properties": {
                "closedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "openedAt": {
                    "type": "string"
                },
                "password": {
                    "$ref": "#/definitions/domain.PasswordAnemic"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domain.PasswordAnemic": {
            "type": "object",
            "properties": {
                "comparedAt": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "hashed": {
                    "type": "string"
                }
            }
        },
        "model.Group": {
            "type": "object",
            "properties": {
                "closedAt": {
                    "type": "string",
                    "example": "2019-12-23 12:27:37"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2019-12-23 12:27:37"
                },
                "id": {
                    "type": "string",
                    "example": "c6a52781-c927-42ec-bc9e-254ddde5f904"
                },
                "name": {
                    "type": "string",
                    "example": "MyGroup"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2019-12-23 12:27:37"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:5000",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "MyExpenses API",
	Description: "This is My expenses api server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
